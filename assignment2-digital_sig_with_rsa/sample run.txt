The 1024-bit modulus N in hexadecimal is: 

df39fda7f2f47ba85014b1f767cbbb1df8f7d2aaf998492ebedb45614042c1d1072ccafa2795cb4686bcbd648ead8d5d17b6662915d5f05160e684519c83bcb39f6116d401a39ae9751c78ff68484637a4bcff67f159fda1114769ee7a225962350503043f08524d0d0cba4090116c445530accfd780077aee560f2b61f9597d


The digitally signed code digest is: 

23390371665984616445384876855674134796111447807465194045479830215143940805440342276982130656966620328570265953436926212981495736193144191018687050769804706422305865661796099011476652516963011374262298043826690675020995967112256570203756470882649182637213167472018139712666718183425888456092691081572754284313


The digitally signed code digest in hexadecimal is: 

214f1a4a37c052a0b4a29e4d3e8fe244e3655a1a5fc8dac8cf382ca05abe7dc79ae214c29b5df88b54c072ec4039dbc4f56afa03cbd27c77221c7c71f8cd10702bf024add04b5caffa6bcaa2b545686987557995c740f9ef647b9131d8ff49ab2cf3109b50c9f42dbc88b73e885207ede36d8029428a9ac747b7fd8f7bc65f19


The code, as it was read in by the program is: 

/**Author:59539204*SzymonZielinski*/packageassignment2;importjava.math.BigInteger;importjava.security.*;importjava.io.*;importjava.nio.file.Paths;importjava.util.Scanner;importjava.nio.file.*;publicclassAssignment2{publicstaticvoidmain(String[]args){BigIntegerprimeP;BigIntegerprimeQ;BigIntegerN;BigIntegerphiN;BigIntegere=newBigInteger(StaticVars.EXP_E,StaticVars.RADIX_E);do{//generatetwodistinct512-bitprobableprimespandqSecureRandomrandomGen=newSecureRandom();primeP=BigInteger.probablePrime(StaticVars.PRIMES_LENGTH,randomGen);primeQ=BigInteger.probablePrime(StaticVars.PRIMES_LENGTH,randomGen);//calculateN=pqN=primeP.multiply(primeQ);//calculatetheEulertotientfunctionphi(N)phiN=phi(primeP,primeQ);}while(!isRelPrime(phiN,e)||primeP.equals(primeQ));//ensurethateisrelativelyprimetophi(N)andthatpandqaretwodistinctprimes//computethevalueforthedecryptionexponentd,themultiplicativeinverseofe(modphi(N))BigIntegerd=multInverse(e,phiN);//readthecodeofthisprogramstoredinaseparatefileStringcode="";try{code=readTextFile(StaticVars.CODE_LOCATION);}catch(IOExceptionio){System.out.println("Couldnotreadthecodefromthetextfile");}//applySHA-256togetthedigestofthecodeBigIntegerhashedCode=newBigInteger(hashString(code));//convertthedigesttociphertextusingtheprivateexponent"d"BigIntegercipherSignature=modularPower(hashedCode,d,N);//printtheresultsrequiredforthisassignmentSystem.out.println("The1024-bitmodulusNinhexadecimalis:"+N.toString(StaticVars.RADIX_HEX));System.out.println("Thedigitallysignedcodedigestis:"+cipherSignature.toString());System.out.println("Thedigitallysignedcodedigestinhexadecimalis:"+cipherSignature.toString(StaticVars.RADIX_HEX));System.out.println("Thecode,asitisreadinbytheprogramis:"+code);}//returnsthemultiplicativeinverseofepublicstaticBigIntegermultInverse(BigIntegere,BigIntegerphiN){BigIntegerx=BigInteger.ZERO;BigIntegerlastX=BigInteger.ONE;while(!phiN.equals(BigInteger.ZERO)){BigIntegerquotient=e.divide(phiN);BigIntegertemp=phiN;phiN=e.mod(phiN);e=temp;temp=x;x=lastX.subtract((quotient).multiply(x));lastX=temp;}returnlastX;}//checkswhethertwoargumentsarerelativelyprimepublicstaticbooleanisRelPrime(BigIntegera,BigIntegerb){returngcd(a,b).equals(BigInteger.ONE);}//returnsthegreatestcommondivisorusingthedivision-basedapproachpublicstaticBigIntegergcd(BigIntegera,BigIntegerb){while(!b.equals(BigInteger.ZERO)){BigIntegertemp=b;b=a.mod(b);a=temp;}returna;}//computestheeulertotientfunctionoftwodifferentprimespublicstaticBigIntegerphi(BigIntegerprimeP,BigIntegerprimeQ){primeP=primeP.subtract(BigInteger.ONE);primeQ=primeQ.subtract(BigInteger.ONE);returnprimeP.multiply(primeQ);}//returnaSHA-256digestofaStringmessagepublicstaticbyte[]hashString(Stringmessage){MessageDigestsha256=null;try{sha256=MessageDigest.getInstance("SHA-256");}catch(NoSuchAlgorithmExceptione){System.out.println("ERROR:NoSuchAlgorithmExceptionoccuredduringtheexecutionofthehashStringfunction!");}sha256.update(message.getBytes());returnsha256.digest();}//THEDECRYPTIONMETHOD-calculate(base^exponent)%moduluspublicstaticBigIntegermodularPower(BigIntegerbase,BigIntegerexponent,BigIntegermodulus){//specialnegativeexponentcaseif(exponent.compareTo(BigInteger.ZERO)==-1){base=multInverse(base,modulus);exponent=exponent.abs();}BigIntegerr=BigInteger.ONE;for(inti=exponent.bitLength();i>=0;i--){if(exponent.testBit(i))r=((r.multiply(r)).multiply(base)).mod(modulus);elser=(r.multiply(r)).mod(modulus);}returnr;}//returncontentsofatextfileasString-WARNING:IGNORESWHITESPACE!publicstaticStringreadTextFile(StringfileName)throwsIOException{Stringcontents="";Pathpath=Paths.get(fileName);Scannerscanner=newScanner(path);while(scanner.hasNext())contents+=scanner.next();returncontents;}}